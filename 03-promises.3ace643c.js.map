{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAAMC,EAAOC,SAASC,cAAc,QAGhCC,EAAM,GAyCV,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,IA7CzBN,EAAKY,iBAAiB,SAAS,SAAAC,GAC7BV,EAAIU,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,K,IAGhChB,EAAKY,iBAAiB,UAAU,SAACK,GAC/B,IAAMC,EAAwBf,EAAxBe,KAAMC,EAAkBhB,EAAlBgB,OAAQC,EAAUjB,EAAVG,MACpBW,EAAMI,iBACN,IAAIC,EAAM,EACNC,GAAYH,GAASF,EAErBM,EAAWC,YAAW,WAExBrB,EAAckB,EADdC,IAAaL,GAEVQ,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOI,QAAQ,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAGhEkB,EAAWS,aAAY,WAGrB7B,EAFAkB,GAAO,EACPC,IAAaL,GAEVQ,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE9DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBR,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE1DgB,KAASH,IACXe,cAAcV,GACdvB,SAASkC,iBAAiB,SAASC,SAAQ,SAAAC,G,OAAMA,EAAGrB,MAAQ,E,QAE5DE,E,GACHE,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\nimport { Notify } from 'notiflix';\n\nlet obj = {};\n\nform.addEventListener('input', e => {\n  obj[e.target.name] = e.target.value;\n});\n\nform.addEventListener('submit', (event) => {\n  let { step, amount, delay } = obj;\n  event.preventDefault();\n  let num = 1;\n  let newDelay = +delay - +step;\n\n  let interval = setTimeout(() => {\n    newDelay += +step;\n    createPromise(num, newDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    interval = setInterval(() => {\n      num += 1;\n      newDelay += +step;\n      createPromise(num, newDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      if (num === +amount) {\n        clearInterval(interval);\n        document.querySelectorAll('input').forEach(el => el.value = '');\n      }\n    }, +step);\n  }, delay);\n\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$obj","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","e","target","name","value","event","step","amount","delay1","preventDefault","num","newDelay","interval","setTimeout","then","param","Notify","success","concat","catch","failure","setInterval","clearInterval","querySelectorAll","forEach","el"],"version":3,"file":"03-promises.3ace643c.js.map"}