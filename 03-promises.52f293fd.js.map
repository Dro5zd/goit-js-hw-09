{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,eAAMC,EAAOC,SAASC,cAAc,QAGpC,IAAIC,EAAM,GAyCV,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,G,CA7CjCN,EAAKY,iBAAiB,SAASC,IAC7BV,EAAIU,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,KAAK,IAGrChB,EAAKY,iBAAiB,UAAWK,IAC/B,IAAIC,KAAEA,EAAIC,OAAEA,EAAQb,MAAAc,GAAUjB,EAC9Bc,EAAMI,iBACN,IAAIC,EAAM,EACNC,GAAYH,GAASF,EAErBM,EAAWC,YAAW,KACxBF,IAAaL,EACbd,EAAckB,EAAKC,GAChBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA6B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA6B,OAAOG,QAAQ,sBAAoBzB,QAAiBC,MAAU,IAGlEkB,EAAWO,aAAY,KACrBT,GAAO,EACPC,IAAaL,EACbd,EAAckB,EAAKC,GAChBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA6B,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IAEhEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA6B,OAAOG,QAAQ,sBAAoBzB,QAAeC,MAAU,IAE5DgB,KAASH,IACXa,cAAcR,GACdvB,SAASgC,iBAAiB,SAASC,SAAQC,GAAMA,EAAGnB,MAAQ,K,IAE5DE,EAAK,GACRE,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\nimport { Notify } from 'notiflix';\n\nlet obj = {};\n\nform.addEventListener('input', e => {\n  obj[e.target.name] = e.target.value;\n});\n\nform.addEventListener('submit', (event) => {\n  let { step, amount, delay } = obj;\n  event.preventDefault();\n  let num = 1;\n  let newDelay = +delay - +step;\n\n  let interval = setTimeout(() => {\n    newDelay += +step;\n    createPromise(num, newDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    interval = setInterval(() => {\n      num += 1;\n      newDelay += +step;\n      createPromise(num, newDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      if (num === +amount) {\n        clearInterval(interval);\n        document.querySelectorAll('input').forEach(el => el.value = '');\n      }\n    }, +step);\n  }, delay);\n\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$obj","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","e","target","name","value","event","step","amount","delay1","preventDefault","num","newDelay","interval","setTimeout","then","Notify","success","catch","failure","setInterval","clearInterval","querySelectorAll","forEach","el"],"version":3,"file":"03-promises.52f293fd.js.map"}